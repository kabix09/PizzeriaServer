<?php
declare(strict_types=1);

namespace Pizzeria\Api;

use Kreait\Firebase\Exception\DatabaseException;
use Pizzeria\Connection\DbConnection;
use Pizzeria\Logger\ClientDataException;
use Pizzeria\Repository\OrderRepository;
use Pizzeria\Validator\Models\OrderValidator;
use Pizzeria\Web\Request;

/**
 * Class Order
 * @package Pizzeria\Api
 */
class Order extends GenericApi
{
    /**
     * @OA\Schema(
     *  schema="Order",
     *  title="Order",
     *  required={"name", "pizzas", "sauces", "price"},
     *  @OA\Property(
     *      property="id",
     *      type="string",
     *      format="uuid",
     *      description="The order unique key"
     *  ),
     *  @OA\Property(
     *      property="pizzas",
     *      type="array",
     *      @OA\Items(ref="#/components/schemas/Pizza"),
     *      description="The order pizzas list"
     *  ),
     *  @OA\Property(
     *      property="sauces",
     *      type="array",
     *      @OA\Items(type="string", format="uuid", example="48a2ee65-a050-43fa-9e80-f4144be994a0"),
     *      description="Sauces add to order"
     *  ),
     *  @OA\Property(
     *      property="price",
     *      type="integer",
     *      description="The order price"
     *  ),
     *  example = {
     *     "id":"ecff5400-76fc-4884-9c0f-9c6f2cf4058b",
     *     "pizzas":{
     *          {
     *              "id":"4914dcd3-cca5-42c9-a246-709e1d10d9d6",
     *              "ingredients":{"1edbfa9a-3339-4cba-b894-1c2c4e947444","7f091d7a-e891-4d8b-934a-41c9b0be7825","6c66f010-308e-4f92-8744-50662518205a","2975215c-4a6f-4bc0-a16e-c6b808e70a50"},
     *              "name":"HAWAJSKA",
     *              "price":20
     *          },
     *          {
     *              "id":"91fa2511-7f32-461b-9b1e-d521ab585ca4",
     *              "ingredients":{"1edbfa9a-3339-4cba-b894-1c2c4e947444","7f091d7a-e891-4d8b-934a-41c9b0be7825","9c06e728-9c7d-4844-a9e1-47133e189845","a957fbdc-e516-4da2-bcd1-030abeacf0b2"},
     *              "name":"TONO",
     *              "price":26
     *          }
     *     },
     *     "sauces":{
     *          "48a2ee65-a050-43fa-9e80-f4144be994a0",
     *          "93fc2015-a063-46cb-a1d3-42ad8befbff9"
     *     },
     *     "price":46
     *  }
     * )
     */
    public const SCHEMA = ['id', 'pizzas', 'sauces', 'price'];

    /** @var OrderValidator $validator */
    protected $validator;

    /**
     * Order constructor.
     */
    public function __construct()
    {
        parent::__construct(new OrderRepository(new DbConnection()), new OrderValidator());
    }


    /**
     * @param Request $request
     * @return array
     * @throws DatabaseException
     * @throws ClientDataException
     *
     * @OA\Get(path="/PizzeriaServer/Api/Order", tags={"Order"},
     *      @OA\Response(response="200", description="Success",
     *          @OA\JsonContent(
     *              type="array",
     *              @OA\Items(ref="#/components/schemas/Order")
     *          )
     *      )
     * )
     */
    public function get(Request $request): array
    {
        return parent::get($request); // TODO: Change the autogenerated stub
    }

    /**
     * @param Request $request
     * @return array
     * @throws ClientDataException
     * @throws DatabaseException
     *
     * @OA\Post(path="/PizzeriaServer/Api/Order", tags={"Order"},
     *     @OA\RequestBody(
     *         required=true,
     *         @OA\MediaType(
     *             mediaType="application/json",
     *             @OA\Schema(ref="#/components/schemas/Order")
     *         )
     *     ),
     *     @OA\Response(response="200", description="Success",
     *         @OA\MediaType(
     *             mediaType="application/json",
     *             @OA\Schema(ref="#/components/schemas/Order")
     *         )
     *     ),
     *     @OA\Response(response="400", description="Not Found",
     *         @OA\MediaType(
     *              mediaType="application/json",
     *              @OA\Schema(ref="#/components/schemas/Error"),
     *              @OA\Examples(example="MissingProperty", value={"message":"missing order property: 'SAMPLE_PROPERTY'"}, summary="Missing property"),
     *              @OA\Examples(example="NonexistentPizza", value={"message":"this pizza don't exists: 'SAMPLE_PIZZA_ID'"}, summary="Nonexistent pizza"),
     *              @OA\Examples(example="NonexistentSauce", value={"message":"this sauce don't exists: 'SAMPLE_SAUCE_ID'"}, summary="Nonexistent sauce"),
     *              @OA\Examples(example="InvalidPrice", value={"message":"miscalculated price: 'SAMPLE_PRICE'"}, summary="Invalid price")
     *         )
     *     )
     * )
     */
    public function post(Request $request): array
    {
        return parent::post($request); // TODO: Change the autogenerated stub
    }

    /**
     * @param Request $request
     * @return array
     * @throws ClientDataException
     * @throws DatabaseException
     *
     * @OA\Put(path="/PizzeriaServer/Api/Order", tags={"Order"},
     *     @OA\RequestBody(
     *         required=true,
     *         @OA\MediaType(
     *             mediaType="application/json",
     *             @OA\Schema(ref="#/components/schemas/Order")
     *         )
     *     ),
     *     @OA\Response(response="200", description="Success",
     *         @OA\MediaType(
     *             mediaType="application/json",
     *             @OA\Schema(ref="#/components/schemas/Order")
     *         )
     *     ),
     *     @OA\Response(response="400", description="Not Found",
     *         @OA\MediaType(
     *              mediaType="application/json",
     *              @OA\Schema(ref="#/components/schemas/Error"),
     *              @OA\Examples(example="MissingProperty", value={"message":"missing order property: 'SAMPLE_PROPERTY'"}, summary="Missing property"),
     *              @OA\Examples(example="NonexistentPizza", value={"message":"this pizza don't exists: 'SAMPLE_PIZZA_ID'"}, summary="Nonexistent pizza"),
     *              @OA\Examples(example="NonexistentSauce", value={"message":"this sauce don't exists: 'SAMPLE_SAUCE_ID'"}, summary="Nonexistent sauce")
     *         )
     *     )
     * )
     */
    public function put(Request $request): array
    {
        return parent::put($request); // TODO: Change the autogenerated stub
    }

    /**
     * @param Request $request
     * @return array
     * @throws ClientDataException
     * @throws DatabaseException
     *
     * @OA\Delete(path="/PizzeriaServer/Api/Order", tags={"Order"},
     *     @OA\RequestBody(
     *         required=true,
     *         @OA\MediaType(
     *             mediaType="application/json",
     *             @OA\Schema(
     *                 required={"id"},
     *                 @OA\Property(property="id", type="string", format="uuid", example="ecff5400-76fc-4884-9c0f-9c6f2cf4058b")
     *             )
     *         )
     *     ),
     *     @OA\Response(response="200", description="Success",
     *         @OA\MediaType(
     *             mediaType="application/json",
     *             @OA\Schema(
     *                 required={"id"},
     *                 @OA\Property(property="id", type="string", format="uuid", example="ecff5400-76fc-4884-9c0f-9c6f2cf4058b")
     *             )
     *         )
     *     ),
     *     @OA\Response(response="400", description="Not Found",
     *         @OA\MediaType(
     *              mediaType="application/json",
     *              @OA\Schema(ref="#/components/schemas/Error"),
     *              @OA\Examples(example="MissingId", value={"message":"missing order id property"}, summary="Missing id"),
     *              @OA\Examples(example="InvalidId", value={"message":"nonexistent order id: 'SAMPLE_PIZZA_ID'"}, summary="Invalid id"),
     *         )
     *     )
     * )
     */
    public function delete(Request $request): array
    {
        return parent::delete($request); // TODO: Change the autogenerated stub
    }
}
