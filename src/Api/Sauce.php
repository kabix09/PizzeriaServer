<?php
declare(strict_types=1);

namespace Pizzeria\Api;

use Kreait\Firebase\Exception\DatabaseException;
use Pizzeria\Connection\DbConnection;
use Pizzeria\Logger\ClientDataException;
use Pizzeria\Repository\SauceRepository;
use Pizzeria\Validator\Elements\SauceValidator;
use Pizzeria\Web\Request;

/**
 * Class Sauce
 * @package Pizzeria\Api
 */
class Sauce extends GenericApi
{
    /**
     * @OA\Schema(
     *  schema="Sauce",
     *  title="Sauce",
     *  required={"name", "price"},
     *  @OA\Property(
     *      property="id",
     *      type="string",
     *      format="uuid",
     *      description="The sauce unique key"
     *  ),
     *  @OA\Property(
     *      property="name",
     *      type="string",
     *      description="The sauce name"
     *  ),
     *  @OA\Property(
     *      property="price",
     *      type="integer",
     *      description="The sauce price"
     *  ),
     *  example={
     *     "id": "48a2ee65-a050-43fa-9e80-f4144be994a0",
     *     "name": "czosnkowy",
     *     "price": 2
     *     }
     * )
     */
    public const SCHEMA = ['id', 'name', 'price'];

    /**
     * Sauce constructor.
     */
    public function __construct()
    {
        parent::__construct(new SauceRepository(new DbConnection()), new SauceValidator());
    }


    /**
     * @param Request $request
     * @return array
     * @throws DatabaseException
     * @throws ClientDataException
     *
     * @OA\Get(path="/PizzeriaServer/Api/Sauce", tags={"Sauce"},
     *      @OA\Response(response="200", description="Success",
     *          @OA\JsonContent(
     *              type="array",
     *              @OA\Items(ref="#/components/schemas/Pizza")
     *          )
     *      )
     * )
     *
     *  @OA\Get(path="/PizzeriaServer/Api/Sauce?name={sauceName}", tags={"Sauce"},
     *      @OA\Parameter(
     *          name="sauceName",
     *          in="path",
     *          @OA\Schema(type="string")
     *      ),
     *      @OA\Response(response="200", description="Success",
     *          @OA\MediaType(
     *              mediaType="application/json",
     *              @OA\Schema(ref="#/components/schemas/Sauce")
     *          )
     *      ),
     *      @OA\Response(response="400", description="Bad Request",
     *          @OA\MediaType(
     *              mediaType="application/json",
     *              @OA\Schema(ref="#/components/schemas/Error"),
     *              @OA\Examples(example="InvalidName", value={"message": "nonexistent sauce name: 'SAMPLE_SAUCE'"}, summary="Invalid name")
     *          )
     *      )
     *  )
     */
    public function get(Request $request): array
    {
        return parent::get($request); // TODO: Change the autogenerated stub
    }

    /**
     * @param Request $request
     * @return array
     * @throws ClientDataException
     * @throws DatabaseException
     *
     * @OA\Post(path="/PizzeriaServer/Api/Sauce", tags={"Sauce"},
     *     @OA\RequestBody(
     *         required=true,
     *         @OA\MediaType(
     *             mediaType="application/json",
     *             @OA\Schema(ref="#/components/schemas/Sauce")
     *         )
     *     ),
     *     @OA\Response(response="200", description="Success",
     *         @OA\MediaType(
     *             mediaType="application/json",
     *             @OA\Schema(ref="#/components/schemas/Sauce")
     *         )
     *     ),
     *     @OA\Response(response="400", description="Not Found",
     *         @OA\MediaType(
     *              mediaType="application/json",
     *              @OA\Schema(ref="#/components/schemas/Error"),
     *              @OA\Examples(example="MissingProperty", value={"message":"missing sauce property: 'SAMPLE_PROPERTY'"}, summary="Missing property")
     *         )
     *     )
     * )
     */
    public function post(Request $request): array
    {
        return parent::post($request); // TODO: Change the autogenerated stub
    }

    /**
     * @param Request $request
     * @return array
     * @throws ClientDataException
     * @throws DatabaseException
     *
     * @OA\Put(path="/PizzeriaServer/Api/Sauce", tags={"Sauce"},
     *     @OA\RequestBody(
     *         required=true,
     *         @OA\MediaType(
     *             mediaType="application/json",
     *             @OA\Schema(ref="#/components/schemas/Sauce")
     *         )
     *     ),
     *     @OA\Response(response="200", description="Success",
     *         @OA\MediaType(
     *             mediaType="application/json",
     *             @OA\Schema(ref="#/components/schemas/Sauce")
     *         )
     *     ),
     *     @OA\Response(response="400", description="Not Found",
     *         @OA\MediaType(
     *              mediaType="application/json",
     *              @OA\Schema(ref="#/components/schemas/Error"),
     *              @OA\Examples(example="MissingProperty", value={"message":"missing sauce property: 'SAMPLE_PROPERTY'"}, summary="Missing property")
     *         )
     *     )
     * )
     */
    public function put(Request $request): array
    {
        return parent::put($request); // TODO: Change the autogenerated stub
    }

    /**
     * @param Request $request
     * @return array
     * @throws ClientDataException
     * @throws DatabaseException
     *
     * @OA\Delete(path="/PizzeriaServer/Api/Sauce", tags={"Sauce"},
     *     @OA\RequestBody(
     *         required=true,
     *         @OA\MediaType(
     *             mediaType="application/json",
     *             @OA\Schema(
     *                 required={"id"},
     *                 @OA\Property(property="id", type="string", format="uuid", example="48a2ee65-a050-43fa-9e80-f4144be994a0")
     *             )
     *         )
     *     ),
     *     @OA\Response(response="200", description="Success",
     *         @OA\MediaType(
     *             mediaType="application/json",
     *             @OA\Schema(
     *                 required={"id"},
     *                 @OA\Property(property="id", type="string", format="uuid", example="48a2ee65-a050-43fa-9e80-f4144be994a0")
     *             )
     *         )
     *     ),
     *     @OA\Response(response="400", description="Not Found",
     *         @OA\MediaType(
     *              mediaType="application/json",
     *              @OA\Schema(ref="#/components/schemas/Error"),
     *              @OA\Examples(example="MissingId", value={"message":"missing sauce id property"}, summary="Missing id"),
     *              @OA\Examples(example="InvalidId", value={"message":"nonexistent sauce id: 'SAMPLE_SAUCE_ID'"}, summary="Invalid id"),
     *         )
     *     )
     * )
     */
    public function delete(Request $request): array
    {
        return parent::delete($request); // TODO: Change the autogenerated stub
    }
}
